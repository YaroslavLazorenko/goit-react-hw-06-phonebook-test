{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-types.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","services/storage-api.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css"],"names":["module","exports","types","ADD","DELETE","CHANGE_FILTER","INITIAL_FORM_LOCAL_STATE","connect","state","contacts","items","dispatch","addContact","name","number","type","payload","id","nanoid","actions","useState","setName","setNumber","handleChange","target","value","Error","className","s","form","action","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","label","htmlFor","inputField","placeholder","pattern","title","required","onChange","button","filterValue","filter","deleteContact","contactItem","contactText","onClick","list","includes","map","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","load","initialItemsState","contactsReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","subscribe","throttle","stringify","setItem","save","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb1f7c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2DcfK\",\"inputField\":\"Filter_inputField__2AWcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__24Cwx\"};","const types = {\n  ADD: 'phonebook/add',\n  DELETE: 'phonebook/delete',\n  CHANGE_FILTER: 'phonebook/changeFilter',\n};\n\nexport default types;\n","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_FORM_LOCAL_STATE = { name: '', number: '' };\n\nconst ContactForm = ({ addContact, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName(INITIAL_FORM_LOCAL_STATE.name);\n    setNumber(INITIAL_FORM_LOCAL_STATE.number);\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('Unknown input field name');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isContactAlreadySaved = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isContactAlreadySaved) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    addContact(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} action=\"#\" onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor=\"number\">\n        Number:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        placeholder=\"Enter phone\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({ contacts: state.contacts.items });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: (name, number) => dispatch(actions.addContact(name, number)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { nanoid } from 'nanoid';\nimport types from './phonebook-types';\n\nexport const addContact = (name, number) => ({\n  type: types.ADD,\n  payload: { id: nanoid(), name, number },\n});\n\nexport const deleteContact = id => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nexport const changeFiler = value => ({ type: types.CHANGE_FILTER, payload: value });\n","import { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filterValue, handleChange }) => {\n  return (\n    <>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        className={s.inputField}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        value={filterValue}\n        onChange={handleChange}\n      ></input>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filterValue: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filterValue: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: e => dispatch(actions.changeFiler(e.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact, deleteContact }) => {\n  return (\n    <li className={s.contactItem}>\n      <span className={s.contactText}>\n        {contact.name}: {contact.number}\n      </span>\n      <button className={s.button} onClick={() => deleteContact(contact.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filter }) => {\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(contact => {\n          return <ContactItem contact={contact} key={contact.name} />;\n        })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import { PropTypes } from 'prop-types';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"phonebookTitle\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contactsTitle\">Contacts</h2>\n      <Filter />\n      {contacts.length !== 0 && <ContactList />}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport types from './phonebook-types';\nimport { load } from '../../services/storage-api';\n\nconst contacts = load('contacts');\nconst initialItemsState = contacts ? contacts : [];\nconst initialFilterState = '';\n\nconst itemsReducer = (state = initialItemsState, { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n    case types.DELETE:\n      return [...state.filter(({ id }) => id !== payload)];\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = initialFilterState, { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nconst contactsReducer = combineReducers({ items: itemsReducer, filter: filterReducer });\n\nexport default combineReducers({ contacts: contactsReducer });\n","export const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport const remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Remove state error: ', error.message);\n  }\n};\n","import { applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore } from 'redux';\nimport throttle from 'lodash.throttle';\nimport reducer from './phonebook/phonebook-reducer';\nimport { save } from '../services/storage-api';\n\nconst STATE_SAVING_DELAY = 1000;\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware()));\n\nstore.subscribe(\n  throttle(() => save('contacts', store.getState().contacts.items), STATE_SAVING_DELAY),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2CmMt\",\"label\":\"ContactForm_label__3zkDB\",\"inputField\":\"ContactForm_inputField__3D9z7\",\"button\":\"ContactForm_button__2njFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__24fwt\",\"contactText\":\"ContactItem_contactText__fk8Fv\",\"button\":\"ContactItem_button__3e8qj\"};"],"sourceRoot":""}